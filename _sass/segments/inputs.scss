/**
 * Sass for inputs section of segments page
 */

@import 'mixins';

.inputs {
	.view {
		display: inline-block;
		flex-grow: 1;
		margin-bottom: 10px;
		text-align: center;
	}

	.letters,
	.binary,
	.hex,
	.hex-combined {
		font-weight: bold;
		margin: auto;
		text-align: center;
		width: 80%;
	}

	.letters,
	.binary,
	.hex {
		// @todo move to mixin
		display: -webkit-box;
		display: -moz-box;
		display: -ms-flexbox;
		display: -webkit-flex;
		display: flex;
	}

	.binary,
	.hex,
	.hex-combined {
		font-family: 'Ubuntu Mono', monospace;
	}

	.letters {
		@include user-select(none);
		// <http://stackoverflow.com/a/21135759/1942596>
		font-size: 0rem;

		.letter {
			cursor: pointer;
			font-size: 1rem;
			margin: 0 3px;
		}

		@each $key, $value in $colour-map {
			&.#{$key} .on {
				color: $value;
			}
		}
	}

	.binary,
	.hex {
		@each $key, $value in $colour-map {
			&.#{$key} {
				@for $i from 0 through 8 {
					.mix-#{$i} {
						color: mix($value, $text, (12.5% * $i));
					}
				}
			}
		}
	}

	.hex-combined {
		margin-top: 8px;
		font-size: 1.2rem;

		.combined {
			// @todo move to mixin <https://css-tricks.com/snippets/css/a-guide-to-flexbox/>
			-webkit-box-flex: 1;
			-moz-box-flex: 1;
			-webkit-flex: 1;
			-ms-flex: 1;
			flex: 1;
			display: inline-block;
		}

		@each $key, $value in $colour-map {
			&.#{$key} {
				@for $i from 0 through 8 {
					.mix-#{$i} {
						color: mix($value, $text, (12.5% * $i));
					}
				}
			}
		}
	}
}
